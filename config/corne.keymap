/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo1 {
            bindings = <&kp LBKT>;
            key-positions = <3 4>;
        };

        combo2 {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };

        combo3 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        combo4 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        combo5 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
        };

        combo6 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        combo7 {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        combo8 {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };

        combo9 {
            bindings = <&to 0>;
            key-positions = <1 10>;
        };

        combo10 {
            bindings = <&to 0>;
            key-positions = <2 9>;
        };
    };

    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <180>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            global-quick-tap;
        };

        caps_esc_ctrl: caps_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kt CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_layer {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E      &kp R     &kp T        &kp Y      &kp U  &kp I              &kp O    &kp P          &kp BACKSPACE
&kp TAB         &kp A  &kp S  &kp D      &kp F     &kp G        &kp H      &kp J  &kp K              &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V     &kp B        &kp N      &kp M  &kp COMMA          &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                              &kp LCTRL  &kp LCMD  &kp ENTER    &kp SPACE  &mo 1  &kp RIGHT_CONTROL
            >;
        };

        layer_1 {
            bindings = <
&lt 2 ESC       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &trans          &kp UP_ARROW    &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp BACKSLASH  &kp BACKSPACE
&kp CAPS        &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &trans             &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp MINUS     &kp EQUAL     &trans        &trans        &kp GRAVE    &trans          &trans          &kp COMMA          &kp DOT            &kp FSLH       &kp RIGHT_SHIFT
                                            &kp LCTRL     &kp LCMD      &kp ENTER    &kp SPACE       &tog 1          &kp RIGHT_CONTROL
            >;
        };

        layer_2 {
            bindings = <
&trans  &none   &trans  &kp F10  &kp F11  &kp F12    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &kp F1   &kp F2     &trans        &trans        &trans        &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans     &trans        &trans        &trans        &trans  &trans  &trans
                        &trans   &trans   &trans     &trans        &trans        &trans
            >;
        };
    };
};
